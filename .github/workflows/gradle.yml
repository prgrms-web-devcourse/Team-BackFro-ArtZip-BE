# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "test/ci-env" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.SUBMODULE_TOKEN }}
        submodules: true
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build With Gradle
      run: |
        ./gradlew clean build --stacktrace --warning-mode=all
      
#    - name: Docker build
#      run: |
#        docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p  ${{ secrets.DOCKERHUB_PASSWORD }}
#        docker build -t hooo0503/artzip .
#        docker push hooo0503/artzip
#
#    - name: Current Time
#      uses: gerred/current-time@v1.0.0
#      id: current-time
#
#    - name: Replace string
#      uses: frabert/replace-string-action@v2.1
#      id: format-time
#      with:
#        pattern: '[:\.]+'
#        string: "${{ steps.current-time.outputs.time }}"
#        replace-with: '-'
#        flags: 'g'
#
#    - name: Beanstalk Deploy
#      uses: einaregilsson/beanstalk-deploy@v20
#      with:
#        # AWS Access Key
#        aws_access_key: ${{secrets.AWS_ACCESS_KEY_ID}}
#        # AWS Secret Key
#        aws_secret_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
#        # AWS Region
#        region: ap-northeast-2
#        # Beanstalk application name
#        application_name: "devcourse-backfro-artzip-eb"
#        # Beanstalk environment name. If empty a version will be created but not deployed anywhere.
#        environment_name: "Devcoursebackfroartzipeb-env"
#        # Version label for new Beanstalk version
#        version_label: "github-action--${{steps.format-time.outputs.replaced}}"
#        # Zip file with the version to deploy. If skipped the action will deploy existing version.
#        deployment_package: Dockerrun.aws.json
